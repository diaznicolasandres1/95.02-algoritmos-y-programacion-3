Object subclass: #Alumno	instanceVariableNames: 'nombreAlumno'	classVariableNames: ''	poolDictionaries: ''	category: 'TP0'!!Alumno methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/6/2018 17:36'!verNombre	^nombreAlumno ! !!Alumno methodsFor: 'initialization' stamp: 'NicolasDiaz 8/29/2018 09:05'!initialize	nombreAlumno := ''.	! !!Alumno methodsFor: 'initialization' stamp: 'NicolasDiaz 8/29/2018 09:48'!establecerNombre: nombreNuevo	"Pre: Debe ser un nombre valido. Post: Cambiara el nombre del alumno"	nombreAlumno := nombreNuevo ! !Object subclass: #Curso	instanceVariableNames: 'nombreCurso dictAlumnos dictNotas'	classVariableNames: ''	poolDictionaries: ''	category: 'TP0'!!Curso methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 8/29/2018 09:49'!inscribirAlumno: oAlumno conNumeroDePadron: numeroPadron "Pre: El alumno fue creado y es un padron valido. Post: Se inscribe el alumno al curso"	dictAlumnos at: numeroPadron put: oAlumno.	! !!Curso methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/6/2018 17:47'!verNombreCurso  ^ nombreCurso.! !!Curso methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 8/29/2018 09:49'!promedioDe: padron "Pre: El padron debe ser de un alumno inscripto. Post: Devuelve el promedio de notas de ese padron"	|promedio|	promedio := (dictNotas at: padron) promedioDeNotas .	 ^promedio.! !!Curso methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 8/29/2018 09:53'!aprobo: padron"Pre: Es el padron de un alumno inscripto, calificado. Post: Devuele true si el alumno aprobo, falso en caso contrario"	|promedio|	promedio := (dictNotas at: padron) promedioDeNotas .	 ^(promedio>=4).! !!Curso methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 8/29/2018 09:50'!calificarA: padron conNota: nota	"Pre: Padron valido y 0<=nota<=10 Post: Califica al alumno"	|notas|	(dictNotas includesKey: padron) 	ifFalse: 		"Creamos objeto notas y agregamos al diccionario"		[ notas := Notas new.		  notas agregarNota: nota.		  dictNotas at: padron put: notas ]	ifTrue:	 [ (dictNotas at: padron )  agregarNota: nota].	! !!Curso methodsFor: 'initialization' stamp: 'NicolasDiaz 8/29/2018 09:07'!initialize	nombreCurso := ''.	dictAlumnos := Dictionary new.	dictNotas := Dictionary new.	! !!Curso methodsFor: 'initialization' stamp: 'NicolasDiaz 8/29/2018 09:49'!establecerNombre: nombreCursoNuevo "Pre: El curso fue creado y es un nombre valido. Post: Cambia el nombre del curso"	nombreCurso := nombreCursoNuevo ! !Object subclass: #Notas	instanceVariableNames: 'notas'	classVariableNames: ''	poolDictionaries: ''	category: 'TP0'!!Notas methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 8/29/2018 09:52'!promedioDeNotas	"Pre: Existen calificaciones cant_notas >0 Post: Devuelve el promedio de notas"	|suma promedio cant_notas|	cant_notas := notas size.	suma:= 0.		notas do: [:n | suma:= (suma+n) ].	promedio := suma/cant_notas.	^promedio.				! !!Notas methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 8/29/2018 09:51'!agregarNota: nueva_nota	"Pre: Es una nota valida 0<=nota<=10 Post: Agrega esa nota"	notas add: nueva_nota.	! !!Notas methodsFor: 'initialization' stamp: 'NicolasDiaz 8/29/2018 09:04'!initialize	notas := OrderedCollection new	! !TestCase subclass: #PruebasAlumno	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP0-test'!!PruebasAlumno methodsFor: 'tests' stamp: 'NicolasDiaz 9/6/2018 17:40'!test01CrearAlumnoYAsignarleUnNombre	|alumno |	alumno := Alumno new.alumno establecerNombre: 'Jorge'.self assert: (alumno verNombre) equals: 'Jorge'.! !TestCase subclass: #PruebasCurso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP0-test'!!PruebasCurso methodsFor: 'tests' stamp: 'NicolasDiaz 9/6/2018 17:58'!test02CrearAlumnoEInscribirlo|alumno  curso promedio|		alumno := Alumno new.	alumno establecerNombre: 'Jorge'.		curso := Curso new.	curso establecerNombre: 'Introduccion a la astronomia'.		curso inscribirAlumno: alumno conNumeroDePadron: 123456.		curso calificarA: 123456 conNota: 2.	curso calificarA: 123456 conNota: 0.	curso calificarA: 123456 conNota: 9. 		self assert: (curso promedioDe: 123456) equals: 11/3.		! !!PruebasCurso methodsFor: 'tests' stamp: 'NicolasDiaz 9/6/2018 17:45'!test01crearCursoYEstablecerNombre|curso|curso := Curso new.curso establecerNombre: 'Introduccion a la astronomia'.self assert: (curso verNombreCurso) equals: 'Introduccion a la astronomia'.! !!PruebasCurso methodsFor: 'tests' stamp: 'NicolasDiaz 9/6/2018 18:03'!test01AlumnoAprobado|alumno  curso |		alumno := Alumno new.	alumno establecerNombre: 'Jorge'.		curso := Curso new.	curso establecerNombre: 'Introduccion a la astronomia'.		curso inscribirAlumno: alumno conNumeroDePadron: 123456.		curso calificarA: 123456 conNota: 10.	curso calificarA: 123456 conNota: 10.	curso calificarA: 123456 conNota: 9. 		self assert: (curso aprobo: 123456).	! !!PruebasCurso methodsFor: 'tests' stamp: 'NicolasDiaz 9/6/2018 18:02'!test03AlumnoNoAprobo|alumno  curso |		alumno := Alumno new.	alumno establecerNombre: 'Jorge'.		curso := Curso new.	curso establecerNombre: 'Introduccion a la astronomia'.		curso inscribirAlumno: alumno conNumeroDePadron: 123456.		curso calificarA: 123456 conNota: 2.	curso calificarA: 123456 conNota: 2.	curso calificarA: 123456 conNota: 2. 		self deny: (curso aprobo: 123456).	! !