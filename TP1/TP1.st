Object subclass: #Asistentes	instanceVariableNames: 'nombre listaEventos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Asistentes methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/25/2018 19:52'!removerEvento: fecha	listaEventos removeKey:  fecha! !!Asistentes methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/24/2018 00:31'!agregarEvento: aString conFecha: aString2 	 ^ self subclassResponsibility ! !!Asistentes methodsFor: 'initialization' stamp: 'NicolasDiaz 9/23/2018 23:09'!initialize		listaEventos := Dictionary new.! !!Asistentes methodsFor: 'initialization' stamp: 'NicolasDiaz 9/23/2018 22:19'!setNombre: nombreNuevo	nombre = nombreNuevo 		! !!Asistentes methodsFor: 'accessing' stamp: 'NicolasDiaz 9/23/2018 23:55'!estaOcupado: fecha	^ (listaEventos includesKey:  fecha)! !Object subclass: #Calendario	instanceVariableNames: 'asistentes eventos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Calendario methodsFor: 'initialization' stamp: 'NicolasDiaz 9/26/2018 00:03'!initialize	asistentes := Dictionary new.		eventos := Dictionary  new.		! !!Calendario methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 02:30'!agregarRecurso: nombreRecurso	|recurso|	(asistentes includesKey: nombreRecurso  ) ifTrue:[YaExisteRecurso signal].	recurso := Recurso crearRecursoConNombre: nombreRecurso.	asistentes at: nombreRecurso put: recurso.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 02:30'!agregarPersona: nombrePersona	|persona|	(asistentes includesKey: nombrePersona ) ifTrue:[YaExistePersona signal].	persona := Persona crearRecursoConNombre: nombrePersona.	asistentes  at: nombrePersona put: persona.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/26/2018 00:03'!existeRecurso: nombreRecurso 	^ (asistentes includesKey: nombreRecurso) ! !!Calendario methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/26/2018 00:24'!estaOcupado: nombre  enAnio: anio mes: mes dia: dia hora: hora	|fechaEvento| 	(asistentes includesKey: nombre) ifFalse: [ NombreNoEncontrado signal].	fechaEvento := DateAndTime year: anio month: mes day: dia hour: hora minute: 0.	 ^(asistentes at: nombre) estaOcupado: fechaEvento.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 01:44'!agregarEventoConNombre: nombre invitados: listaAsistentes enAnio: anio mes: mes dia: dia hora: hora		|fechaEvento evento listaObjetosAsistentes|	(eventos includesKey: nombre) ifTrue: [ YaExisteEventoConEseNombre signal ]. 	fechaEvento  := DateAndTime year: anio month: mes day: dia hour: hora minute: 0.		listaObjetosAsistentes := OrderedCollection new.	"meto los objetos asistente en una coleccion"	listaAsistentes do: [:nombreAsistente | listaObjetosAsistentes add: (asistentes  at: nombreAsistente) ].		evento:= EventoSimple  crearEventoCon: listaObjetosAsistentes  conFecha:fechaEvento   conNombre: nombre. 		eventos at: nombre put: evento.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 01:44'!agregarEventoSemanalConNombre: nombre semanas: semanas invitados: listaAsistentes enAnio: anio mes: mes dia: dia hora: hora 		|fechaEvento evento listaObjetoAsistentes listaFechas |	(eventos includesKey: nombre) ifTrue: [ YaExisteEventoConEseNombre signal ]. 	fechaEvento  := DateAndTime year: anio month: mes day: dia hour: hora minute: 0.		listaObjetoAsistentes := OrderedCollection new.	"meto los objetos asistentes al evento en una coleccion"	listaAsistentes do: [:nombreInvitado | listaObjetoAsistentes add: (asistentes  at: nombreInvitado) ].		listaFechas := self  convertidorDeSemanas: fechaEvento  cantidadSemanas: semanas.			evento:= EventoSemanal crearEvento: listaObjetoAsistentes  conFechas:listaFechas   conNombre: nombre. 		eventos at: nombre put: evento.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/26/2018 00:27'!removerEvento: nombreEvento	(eventos includesKey: nombreEvento) ifFalse: [EventoInexistente signal ].	(eventos at: nombreEvento) borrarEvento.! !!Calendario methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/26/2018 00:03'!existePersona: nombrePersona	 ^ (asistentes includesKey: nombrePersona) ! !!Calendario methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/26/2018 00:18'!convertidorDeSemanas: fechaInicial cantidadSemanas: semanas	| listaFechas  fechaAux |	(semanas <1) ifTrue: [ CantidadDeSemanasMenorAUno signal ].	listaFechas := OrderedCollection new.	listaFechas add: fechaInicial.	fechaAux := fechaInicial.	(semanas-1) timesRepeat: [		fechaAux   := fechaAux  +(Duration days: 7).		listaFechas add: fechaAux ].		^listaFechas.		! !Error subclass: #CantidadDeSemanasMenorAUno	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #EventoInexistente	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Object subclass: #EventoSemanal	instanceVariableNames: 'fechas asistentes nombre'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!EventoSemanal methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/25/2018 23:48'!invitar	fechas do: [:fecha | asistentes do: [ :eachAsistente | eachAsistente agregarEvento: nombre conFecha: fecha]].	! !!EventoSemanal methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/25/2018 23:48'!borrarEvento	fechas do: [:fecha | asistentes do: [ :eachAsistente | eachAsistente removerEvento: fecha]].! !!EventoSemanal methodsFor: 'initialization' stamp: 'NicolasDiaz 9/25/2018 20:53'!setFechas: fechasColec	fechas := fechasColec ! !!EventoSemanal methodsFor: 'initialization' stamp: 'NicolasDiaz 9/25/2018 21:03'!setNombre: nombreNuevo	nombre := nombreNuevo ! !!EventoSemanal methodsFor: 'initialization' stamp: 'NicolasDiaz 9/25/2018 23:49'!setListaAsistentes: listaAsistentes	asistentes := listaAsistentes	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EventoSemanal class	instanceVariableNames: ''!!EventoSemanal class methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 01:44'!crearEvento: listaAsistentes  conFechas:fechasEvento   conNombre: nombreNuevo|eventoSemanal|	eventoSemanal := EventoSemanal new.	eventoSemanal setFechas: fechasEvento.	eventoSemanal setNombre: nombreNuevo.	eventoSemanal setListaAsistentes: listaAsistentes.	eventoSemanal invitar.	^eventoSemanal.! !Object subclass: #EventoSimple	instanceVariableNames: 'asistentes nombre fecha'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!EventoSimple methodsFor: 'initialization' stamp: 'NicolasDiaz 9/25/2018 20:40'!setFecha: fechaEvento	fecha := fechaEvento! !!EventoSimple methodsFor: 'initialization' stamp: 'NicolasDiaz 9/25/2018 20:58'!setNombre: nombreNuevo	nombre := nombreNuevo ! !!EventoSimple methodsFor: 'initialization' stamp: 'NicolasDiaz 9/25/2018 23:47'!setListaAsistentes: listaAsistentes	asistentes := listaAsistentes	! !!EventoSimple methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/25/2018 23:51'!invitar	asistentes do: [ :eachAsistente | eachAsistente agregarEvento: nombre conFecha: fecha]! !!EventoSimple methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/25/2018 23:51'!borrarEvento	asistentes  do: [:each | each removerEvento: fecha ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EventoSimple class	instanceVariableNames: 'invitados fecha fechaEvento'!!EventoSimple class methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 01:44'!crearEventoCon: listaAsistentes conFecha: fechaNueva conNombre: nombreNuevo	|evento|	evento := EventoSimple new.	evento setNombre: nombreNuevo.	evento setListaAsistentes: listaAsistentes.	evento setFecha: fechaNueva.	evento invitar.	^evento.! !Error subclass: #NombreNoEncontrado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Asistentes subclass: #Persona	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Persona methodsFor: 'initialization' stamp: 'NicolasDiaz 9/24/2018 00:18'!initialize 	super initialize! !!Persona methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/26/2018 00:42'!agregarEvento: conNombre conFecha: fecha		listaEventos at: fecha put: conNombre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 02:30'!crearRecursoConNombre: nombre 	|persona|	persona := Persona new.	persona setNombre: nombre.	^ persona.! !Asistentes subclass: #Recurso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Recurso methodsFor: 'initialization' stamp: 'NicolasDiaz 9/24/2018 00:34'!initialize	super initialize! !!Recurso methodsFor: 'as yet unclassified' stamp: 'NicolasDiaz 9/24/2018 00:45'!agregarEvento: conNombre conFecha: fecha	(listaEventos includesKey:  fecha) ifTrue: [RecursoOcupadoError signal].	listaEventos at: fecha put: conNombre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Recurso class	instanceVariableNames: ''!!Recurso class methodsFor: 'as yet unclassified' stamp: 'Nicolas 9/27/2018 02:30'!crearRecursoConNombre: nombre 	|recurso|	recurso := Recurso new.	recurso setNombre: nombre.	^ recurso.! !Error subclass: #RecursoOcupadoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #YaExisteEventoConEseNombre	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #YaExistePersona	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #YaExisteRecurso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!