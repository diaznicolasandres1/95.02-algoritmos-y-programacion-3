TestCase subclass: #PruebasAzucarero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasAzucarero commentStamp: 'TomasBustamante 3/25/2018 01:05' prior: 0!Pruebas unitarias de la clase Azucarero.!!PruebasAzucarero methodsFor: 'tests' stamp: 'TomasBustamante 3/22/2018 20:35'!test04AzucareroEndulzaUnoEnVasoYAlVolcarloElVasoQuedaVacio	" Arrange "	| azucarero vaso contenido |	vaso := Vaso new.	azucarero := Azucarero new.		" Act "	azucarero endulzar: 1 en: vaso.	vaso volcar.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasAzucarero methodsFor: 'tests' stamp: 'TomasBustamante 3/24/2018 23:29'!test02AzucareroEndulzaDosEnVasoYAlVolcarloDosVecesDevuelveDosAzucar	" Arrange "	| azucarero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	azucarero := Azucarero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	2 timesRepeat: [ contenidoEsperado add: 'azucar' ].		" Act "	azucarero endulzar: 2 en: vaso.	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasAzucarero methodsFor: 'tests' stamp: 'TomasBustamante 3/24/2018 12:48'!test07AzucareroEndulzaUnoEnVasoQueYaTeniaUnCafeYAlVolcarloDosVecesDevuelveElAzucarYLuegoElCafe	" Arrange "	| azucarero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	azucarero := Azucarero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'azucar'.	contenidoEsperado add: 'cafe'.		" Act "	vaso agregar: 'cafe'.	azucarero endulzar: 1 en: vaso.	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasAzucarero methodsFor: 'tests' stamp: 'TomasBustamante 3/23/2018 13:47'!test06AzucareroEndulzaUnaCantidadNegativaEnVasoVacioYElVasoQuedaVacio	" Arrange "	| azucarero vaso contenido |	vaso := Vaso new.	azucarero := Azucarero new.		" Act "	azucarero endulzar: -1 en: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasAzucarero methodsFor: 'tests' stamp: 'TomasBustamante 3/22/2018 20:10'!test01AzucareroEndulzaUnoEnVasoYAlVolcarloDevuelveUnAzucar	" Arrange "	| azucarero vaso contenido |	vaso := Vaso new.	azucarero := Azucarero new.		" Act "	azucarero endulzar: 1 en: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'azucar'.! !!PruebasAzucarero methodsFor: 'tests' stamp: 'TomasBustamante 3/23/2018 19:46'!test03AzucareroEndulzaCienEnVasoYAlVolcarloCienVecesDevuelveCienDeAzucar	" Arrange "	| azucarero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	azucarero := Azucarero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	100 timesRepeat: [ contenidoEsperado add: 'azucar'. ].		" Act "	azucarero endulzar: 100 en: vaso.	100 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasAzucarero methodsFor: 'tests' stamp: 'TomasBustamante 3/23/2018 12:58'!test05AzucareroEndulzaCeroEnVasoVacioYElVasoQuedaVacio	" Arrange "	| azucarero vaso contenido |	vaso := Vaso new.	azucarero := Azucarero new.		" Act "	azucarero endulzar: 0 en: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !TestCase subclass: #PruebasCafetero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasCafetero commentStamp: 'TomasBustamante 3/25/2018 01:05' prior: 0!Pruebas unitarias de la clase Cafetero.!!PruebasCafetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test03CafeteroPreparaCienCafesEnVasoYAlVolcarloCienVecesDevuelveCienCafes	" Arrange "	| cafetero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	cafetero := Cafetero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	100 timesRepeat: [ contenidoEsperado add: 'cafe'. ].		" Act "	100 timesRepeat: [ cafetero prepararUnoEn: vaso ].	100 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasCafetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test01CafeteroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnCafe 	" Arrange "	| cafetero vaso contenido |	vaso := Vaso new.	cafetero := Cafetero new.		" Act "	cafetero prepararUnoEn: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'cafe'.! !!PruebasCafetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test04CafeteroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio	" Arrange "	| cafetero vaso contenido |	vaso := Vaso new.	cafetero := Cafetero new.		" Act "	cafetero prepararUnoEn: vaso.	vaso volcar. " cafe "	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasCafetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test02CafeteroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosCafe	" Arrange "	| cafetero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	cafetero := Cafetero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'cafe'.	contenidoEsperado add: 'cafe'.		" Act "	2 timesRepeat: [ cafetero prepararUnoEn: vaso. ].	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasCafetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test05CafeteroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveElCafeYLuegoElAzucar	" Arrange "	| cafetero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	cafetero := Cafetero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'cafe'.	contenidoEsperado add: 'azucar'.		" Act "	vaso agregar: 'azucar'.	cafetero prepararUnoEn: vaso.	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !TestCase subclass: #PruebasHacedorDeCafeConLeche	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasHacedorDeCafeConLeche commentStamp: 'TomasBustamante 3/25/2018 01:05' prior: 0!Pruebas unitarias de la clase HacedorDeCafeConLeche.!!PruebasHacedorDeCafeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test05HacedorDeCafeConLechePreparaUnoEnVasoQueYaTeniaUnAzucar	" Arrange "	| hacedorDeCafeConLeche vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	hacedorDeCafeConLeche := HacedorDeCafeConLeche new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'cafe'.	contenidoEsperado add: 'azucar'.		" Act "	vaso agregar: 'azucar'.	hacedorDeCafeConLeche prepararUnoEn: vaso.	3 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasHacedorDeCafeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test01HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloUnaVezDevuelveLeche	" Arrange "	| hacedorDeCafeConLeche vaso contenido |	vaso := Vaso new.	hacedorDeCafeConLeche := HacedorDeCafeConLeche new.		" Act "	hacedorDeCafeConLeche prepararUnoEn: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'leche'.! !!PruebasHacedorDeCafeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test02HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloLaSegundaVezDevuelveCafe	" Arrange "	| hacedorDeCafeConLeche vaso contenido |	vaso := Vaso new.	hacedorDeCafeConLeche := HacedorDeCafeConLeche new.		" Act "	hacedorDeCafeConLeche prepararUnoEn: vaso.	vaso volcar. " Aqui no necesito guardarme el ingrediente volcado "	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'cafe'.! !!PruebasHacedorDeCafeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test04HacedorDeCafeConLechePreparaDosEnVaso	" Arrange "	| hacedorDeCafeConLeche vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	hacedorDeCafeConLeche := HacedorDeCafeConLeche new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	2 timesRepeat: [ 		contenidoEsperado add: 'leche'.		contenidoEsperado add: 'cafe' ].		" Act "	2 timesRepeat: [ hacedorDeCafeConLeche prepararUnoEn: vaso ].	4 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasHacedorDeCafeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test03HacedorDeCafeConLechePreparaUnoEnUnVasoYAlVolcarloLaTerceraVezDevuelveVacio	" Arrange "	| hacedorDeCafeConLeche vaso contenido |	vaso := Vaso new.	hacedorDeCafeConLeche := HacedorDeCafeConLeche new.		" Act "	hacedorDeCafeConLeche prepararUnoEn: vaso.	vaso volcar. " leche "	vaso volcar. " cafe "	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !TestCase subclass: #PruebasHacedorDeTeConLeche	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasHacedorDeTeConLeche commentStamp: 'TomasBustamante 3/25/2018 01:05' prior: 0!Pruebas unitarias de la clase HacedorDeTeConLeche.!!PruebasHacedorDeTeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test03HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloLaTerceraVezDevuelveVacio	" Arrange "	| hacedorDeTeConLeche vaso contenido |	vaso := Vaso new.	hacedorDeTeConLeche := HacedorDeTeConLeche new.		" Act "	hacedorDeTeConLeche prepararUnoEn: vaso.	vaso volcar. " leche "	vaso volcar. " te "	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasHacedorDeTeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test04HacedorDeTeConLechePreparaDosEnVaso	" Arrange "	| hacedorDeTeConLeche vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	hacedorDeTeConLeche := HacedorDeTeConLeche new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	2 timesRepeat: [ 		contenidoEsperado add: 'leche'.		contenidoEsperado add: 'te' ].		" Act "	2 timesRepeat: [ hacedorDeTeConLeche prepararUnoEn: vaso ].	4 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasHacedorDeTeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test05HacedorDeTeConLechePreparaUnoEnVasoQueYaTeniaUnAzucar	" Arrange "	| hacedorDeTeConLeche vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	hacedorDeTeConLeche := HacedorDeTeConLeche new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'te'.	contenidoEsperado add: 'azucar'.		" Act "	vaso agregar: 'azucar'.	hacedorDeTeConLeche prepararUnoEn: vaso.	3 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasHacedorDeTeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test02HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloLaSegundaVezDevuelveTe	" Arrange "	| hacedorDeTeConLeche vaso contenido |	vaso := Vaso new.	hacedorDeTeConLeche := HacedorDeTeConLeche new.		" Act "	hacedorDeTeConLeche prepararUnoEn: vaso.	vaso volcar. " Aqui no necesito guardarme el ingrediente volcado "	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'te'.! !!PruebasHacedorDeTeConLeche methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test01HacedorDeTeConLechePreparaUnoEnUnVasoYAlVolcarloUnaVezDevuelveLeche	" Arrange "	| hacedorDeTeConLeche vaso contenido |	vaso := Vaso new.	hacedorDeTeConLeche := HacedorDeTeConLeche new.		" Act "	hacedorDeTeConLeche prepararUnoEn: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'leche'.! !TestCase subclass: #PruebasLechero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasLechero commentStamp: 'TomasBustamante 3/25/2018 01:05' prior: 0!Pruebas unitarias de la clase Lechero.!!PruebasLechero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test02LecheroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosLeches	" Arrange "	| lechero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	lechero := Lechero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'leche'.		" Act "	2 timesRepeat: [ lechero prepararUnoEn: vaso ].	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasLechero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test04LecheroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio	" Arrange "	| lechero vaso contenido |	vaso := Vaso new.	lechero := Lechero new.		" Act "	lechero prepararUnoEn: vaso.	vaso volcar. " leche "	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasLechero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test01LecheroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnaLeche	" Arrange "	| lechero vaso contenido |	vaso := Vaso new.	lechero := Lechero new.		" Act "	lechero prepararUnoEn: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'leche'.! !!PruebasLechero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test05LecheroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveLaLecheYLuegoElAzucar	" Arrange "	| lechero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	lechero := Lechero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'azucar'.		" Act "	vaso agregar: 'azucar'.	lechero prepararUnoEn: vaso.	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasLechero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test03LecheroPreparaCienLechesEnVasoYAlVolcarloCienVecesDevuelveCienLeches	" Arrange "	| lechero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	lechero := Lechero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	100 timesRepeat: [ contenidoEsperado add: 'leche'. ].		" Act "	100 timesRepeat: [ lechero prepararUnoEn: vaso ].	100 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !TestCase subclass: #PruebasMaquinaBebidas	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasMaquinaBebidas commentStamp: 'TomasBustamante 3/24/2018 23:50' prior: 0!Pruebas unitarias y de integración de la clase MaquinaBebidas.!!PruebasMaquinaBebidas methodsFor: 'testsCafeConLeche' stamp: 'TomasBustamante 3/24/2018 23:36'!test02PrepararCafeConLecheConUnAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'azucar'.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'cafe'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: 1.	4 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !!PruebasMaquinaBebidas methodsFor: 'testsCafeConLeche' stamp: 'TomasBustamante 3/24/2018 23:35'!test03PrepararCafeConLecheConDosDeAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	2 timesRepeat: [ contenidoEsperado add: 'azucar' ].	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'cafe'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: 2.	5 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !!PruebasMaquinaBebidas methodsFor: 'testsCafeConLeche' stamp: 'TomasBustamante 3/24/2018 23:35'!test04PrepararCafeConLecheConAzucarNegativaNoPoneAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'cafe'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: -1.	3 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !!PruebasMaquinaBebidas methodsFor: 'testsCafeConLeche' stamp: 'TomasBustamante 3/24/2018 23:36'!test01PrepararCafeConLecheSinAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'cafe'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerCafeConLecheEn: vaso conCantidadDeAzucar: 0.	3 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !!PruebasMaquinaBebidas methodsFor: 'testsTeConLeche' stamp: 'TomasBustamante 3/25/2018 01:11'!test08PrepararTeConLecheConAzucarNegativaNoPoneAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'te'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerTeConLecheEn: vaso conCantidadDeAzucar: -1.	3 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !!PruebasMaquinaBebidas methodsFor: 'testsTeConLeche' stamp: 'TomasBustamante 3/25/2018 01:11'!test07PrepararTeConLecheConDosDeAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	2 timesRepeat: [ contenidoEsperado add: 'azucar' ].	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'te'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerTeConLecheEn: vaso conCantidadDeAzucar: 2.	5 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !!PruebasMaquinaBebidas methodsFor: 'testsTeConLeche' stamp: 'TomasBustamante 3/25/2018 01:10'!test05PrepararTeConLecheSinAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'te'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerTeConLecheEn: vaso conCantidadDeAzucar: 0.	3 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !!PruebasMaquinaBebidas methodsFor: 'testsTeConLeche' stamp: 'TomasBustamante 3/25/2018 01:11'!test06PrepararTeConLecheConUnAzucar	" Arrange "	| vaso maquina contenidoReal contenidoEsperado |	vaso := Vaso new.	maquina := MaquinaBebidas new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'azucar'.	contenidoEsperado add: 'leche'.	contenidoEsperado add: 'te'.	contenidoEsperado add: 'vacio'.		" Act "	maquina hacerTeConLecheEn: vaso conCantidadDeAzucar: 1.	4 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.	! !TestCase subclass: #PruebasTetero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasTetero commentStamp: 'TomasBustamante 3/25/2018 01:05' prior: 0!Pruebas unitarias de la clase Tetero.!!PruebasTetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test01TeteroPreparaUnoEnUnVasoYAlVolcarloDevuelveUnTe 	" Arrange "	| tetero vaso contenido |	vaso := Vaso new.	tetero := Tetero new.		" Act "	tetero prepararUnoEn: vaso.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'te'.! !!PruebasTetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test02TeteroPreparaDosEnVasoYAlVolcarloDosVecesDevuelveDosTe	" Arrange "	| tetero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	tetero := Tetero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	2 timesRepeat: [ contenidoEsperado add: 'te' ].		" Act "	2 timesRepeat: [ tetero prepararUnoEn: vaso ].	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasTetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test04TeteroPreparaUnoEnVasoYAlVolcarloElVasoQuedaVacio	" Arrange "	| tetero vaso contenido |	vaso := Vaso new.	tetero := Tetero new.		" Act "	tetero prepararUnoEn: vaso.	vaso volcar.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasTetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test03TeteroPreparaCienTesEnVasoYAlVolcarloCienVecesDevuelveCienTes	" Arrange "	| tetero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	tetero := Tetero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	100 timesRepeat: [ contenidoEsperado add: 'te'. ].		" Act "	100 timesRepeat: [ tetero prepararUnoEn: vaso ].	100 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasTetero methodsFor: 'tests' stamp: 'NicolasDiaz 9/12/2018 16:38'!test05TeteroPreparaUnoEnVasoQueYaTeniaUnAzucarYAlVolcarloDosVecesDevuelveElTeYLuegoElAzucar	" Arrange "	| tetero vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	tetero := Tetero new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'te'.	contenidoEsperado add: 'azucar'.		" Act "	vaso agregar: 'azucar'.	tetero prepararUnoEn: vaso.	2 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !TestCase subclass: #PruebasVaso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MaquinaBebidas-Tests'!!PruebasVaso commentStamp: 'TomasBustamante 3/25/2018 01:06' prior: 0!Pruebas unitarias de la clase Vaso.!!PruebasVaso methodsFor: 'tests' stamp: 'TomasBustamante 3/23/2018 18:56'!test06AgregoCafeYAzucarAlVasoYAlVolcarloLaSegundaVezDevuelveCafe	" Arrange "	| vaso contenido |	vaso := Vaso new.		" Act "	vaso agregar: 'cafe'.	vaso agregar: 'azucar'.	vaso volcar. " Aqui no necesito guardarme el ingrediente volcado "	contenido := vaso volcar. " Aqui si "		" Assert "	self assert: contenido equals: 'cafe'.! !!PruebasVaso methodsFor: 'tests' stamp: 'TomasBustamante 3/22/2018 19:50'!test02VolcarVasoConCafeDevuelveCafe	" Arrange "	| vaso contenido |	vaso := Vaso new.		" Act "	vaso agregar: 'cafe'.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'cafe'.! !!PruebasVaso methodsFor: 'tests' stamp: 'TomasBustamante 3/22/2018 20:38'!test03VolcarVasoConCafeVaciaElVaso	" Arrange "	| vaso contenido |	vaso := Vaso new.		" Act "	vaso agregar: 'cafe'.	vaso volcar. " Aqui no necesito guardarme el ingrediente volcado "	contenido := vaso volcar. " Aqui si "		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasVaso methodsFor: 'tests' stamp: 'TomasBustamante 3/22/2018 19:47'!test01VasoRecienInstanciadoEstaVacio	" Arrange "	| vaso contenido |	vaso := Vaso new.		" Act "	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'vacio'.! !!PruebasVaso methodsFor: 'tests' stamp: 'TomasBustamante 3/24/2018 12:51'!test07AgregoTresIngredientesYAlVolcarlosLosDevuelveEnOrdenInverso	" Arrange "	| vaso contenidoReal contenidoEsperado |	vaso := Vaso new.	contenidoReal := OrderedCollection new.	contenidoEsperado := OrderedCollection new.	contenidoEsperado add: 'azucar'.	contenidoEsperado add: 'leche de soja'.	contenidoEsperado add: 'cafe'.		" Act "	vaso agregar: 'cafe'.	vaso agregar: 'leche de soja'.	vaso agregar: 'azucar'.	3 timesRepeat: [ contenidoReal add: (vaso volcar) ].		" Assert "	self assert: contenidoReal equals: contenidoEsperado.! !!PruebasVaso methodsFor: 'tests' stamp: 'TomasBustamante 3/23/2018 18:55'!test05AgregoCafeYAzucarAlVasoYAlVolcarloUnaVezDevuelveElAzucar	" Arrange "	| vaso contenido |	vaso := Vaso new.		" Act "	vaso agregar: 'cafe'.	vaso agregar: 'azucar'.	contenido := vaso volcar.		" Assert "	self assert: contenido equals: 'azucar'.! !!PruebasVaso methodsFor: 'tests' stamp: 'TomasBustamante 3/24/2018 12:51'!test04VolcarElVasoVacioMasDeUnaVezSigueDandoVacio	" Arrange "	| vaso contenido |	vaso := Vaso new.		" Act "	vaso agregar: 'cafe'.	3 timesRepeat: [ vaso volcar ]. " Aqui no necesito guardarme el ingrediente volcado "	contenido := vaso volcar. " Aqui si "		" Assert "	self assert: contenido equals: 'vacio'.! !